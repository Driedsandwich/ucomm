# ucomm-lite ENV (independent from main)
UCOMM_SESSION="ucomm-lite"  # tmux session name

# Login Mode: "web" (browser auth), "api-key" (token only), "echo" (no auth)
LOGIN_MODE="web"

# Role CLI Commands
# Default: empty (echo-mode fallback displays input as-is)
# Set to actual CLI command to execute real AI interactions
BOSS_CMD=""
MANAGER_CMD=""
S1_CMD=""
S2_CMD=""
S3_CMD=""

# Login Commands (for initial web authentication)
# Default: empty (no login required)
BOSS_LOGIN_CMD=""
MANAGER_LOGIN_CMD=""
S1_LOGIN_CMD=""
S2_LOGIN_CMD=""
S3_LOGIN_CMD=""

# Test Commands (to verify authentication status)
# Default: empty (no test performed)
BOSS_TEST_CMD=""
MANAGER_TEST_CMD=""
S1_TEST_CMD=""
S2_TEST_CMD=""
S3_TEST_CMD=""

# Example configurations by OS/CLI:
# 
# Gemini CLI:
#   BOSS_CMD="gemini generate"
#   BOSS_LOGIN_CMD="gemini auth login"
#   BOSS_TEST_CMD="gemini auth whoami"
#
# Claude CLI (official):
#   S1_CMD="claude"
#   S1_LOGIN_CMD="claude auth login"
#   S1_TEST_CMD="claude auth whoami"
#
# OpenAI CLI:
#   S2_CMD="openai chat completions create --model gpt-3.5-turbo --messages"
#   S2_LOGIN_CMD="openai auth login"
#   S2_TEST_CMD="openai auth"
#
# Mixed setup example:
#   LOGIN_MODE="web"                 # Enable web login flow
#   BOSS_CMD="gemini generate"       # Strategic planning
#   BOSS_LOGIN_CMD="gemini auth login"
#   BOSS_TEST_CMD="gemini auth whoami"
#   MANAGER_CMD="claude"             # Task coordination  
#   MANAGER_LOGIN_CMD="claude auth login"
#   MANAGER_TEST_CMD="claude auth whoami"
#   S1_CMD="claude"                  # Implementation
#   S1_LOGIN_CMD="claude auth login"
#   S1_TEST_CMD="claude auth whoami"
#   S2_CMD=""                        # Keep as echo-mode
#   S3_CMD=""                        # Keep as echo-mode