name: smoke
on:
  workflow_dispatch:
    inputs:
      secure_mode:
        description: "SECURE_MODE (0=stub, 1=prod)"
        required: false
        default: "0"
      run_capture:
        description: "Capture logs/artifacts"
        required: false
        default: "true"

jobs:
  smoke:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      UCOMM_SECURE_MODE: ${{ github.event.inputs.secure_mode || '0' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Make scripts executable
        run: |
          chmod +x ucomm.sh || true
          chmod +x scripts/*.sh || true
          echo "TZ: $(cat /etc/timezone || true)"

      - name: Launch (SECURE_MODE=${{ env.UCOMM_SECURE_MODE }})
        run: |
          echo "[${{ env.UCOMM_SECURE_MODE }}] starting"
          ./ucomm.sh start "${UCOMM_SECURE_MODE}" || true
          sleep 2

      # >>> MCP Launch & Verify (HTTP-based) <<<
      - name: MCP Launch & Verify
        id: mcp
        shell: bash
        run: |
          set -Eeuo pipefail
          mkdir -p artifacts

          echo "Launching MCP (stub allowed only when SECURE_MODE=0)..."
          timeout 15s scripts/mcp-launch.sh start || echo "(start returned non-zero or timed out, will still verify HTTP)"
          sleep 3

          # /ready
          if curl -fsS http://127.0.0.1:39200/ready \
                --max-time 5 --retry 3 --retry-delay 2 --retry-all-errors \
                -o artifacts/mcp_ready.json 2>/dev/null; then
            echo "mcp_ready=ok" >> "$GITHUB_OUTPUT"
            echo "✓ MCP /ready: OK"
          else
            echo "mcp_ready=failed" >> "$GITHUBOUTPUT" || true
            echo "mcp_ready=failed" >> "$GITHUB_OUTPUT"
            echo "{\"error\":\"endpoint_unreachable\",\"timestamp\":\"$(date -Iseconds)\"}" > artifacts/mcp_ready.json
            echo "✗ MCP /ready: FAILED"
          fi

          # /health
          if curl -fsS http://127.0.0.1:39200/health \
                --max-time 5 --retry 3 --retry-delay 2 --retry-all-errors \
                -o artifacts/mcp_health.json 2>/dev/null; then
            echo "mcp_health=ok" >> "$GITHUB_OUTPUT"
            echo "✓ MCP /health: OK"
          else
            echo "mcp_health=failed" >> "$GITHUBOUTPUT" || true
            echo "mcp_health=failed" >> "$GITHUB_OUTPUT"
            echo "{\"error\":\"endpoint_unreachable\",\"timestamp\":\"$(date -Iseconds)\"}" > artifacts/mcp_health.json
            echo "✗ MCP /health: FAILED"
          fi

          scripts/mcp-launch.sh status || true

      - name: Health
        id: health
        run: |
          mkdir -p artifacts
          ./scripts/health.sh | tee artifacts/health.json

      - name: Collect tmux info
        if: always()
        run: |
          mkdir -p artifacts
          tmux list-windows  > artifacts/tmux_windows.txt 2>/dev/null || true
          tmux list-panes    > artifacts/tmux_panes.txt   2>/dev/null || true
          cp config/topology.yaml artifacts/topology.yaml || true
          echo "${UCOMM_SECURE_MODE}" > artifacts/MODE

      - name: Step Summary
        if: always()
        shell: bash
        run: |
          SEC="${UCOMM_SECURE_MODE:-0}"
          HEALTH="$(jq -r '.summary.status // "unknown"' artifacts/health.json 2>/dev/null || echo unknown)"
          MCP_READY="${{ steps.mcp.outputs.mcp_ready || 'failed' }}"
          MCP_HEALTH="${{ steps.mcp.outputs.mcp_health || 'failed' }}"
          MCP_STATUS="down"
          if [ "$MCP_READY" = "ok" ] && [ "$MCP_HEALTH" = "ok" ]; then MCP_STATUS="up"; fi

          {
            echo "## Smoke result"
            echo "- SECURE_MODE: **${SEC}**"
            echo "- Health: **${HEALTH}**"
            echo "- MCP: **${MCP_STATUS}** (/ready: ${MCP_READY}, /health: ${MCP_HEALTH})"
            echo
            echo "### Artifacts"
            echo "- artifacts/ (health.json, mcp_ready.json, mcp_health.json, tmux_*.txt, topology.yaml, MODE)"
          } >> $GITHUB_STEP_SUMMARY

      - name: Upload artifacts (logs + diag)
        uses: actions/upload-artifact@v4
        with:
          name: smoke-${{ github.run_id }}
          path: artifacts/**

      - name: Teardown
        if: always()
        run: |
          scripts/mcp-launch.sh stop || true
          ./ucomm.sh stop || true
          tmux kill-server 2>/dev/null || true
